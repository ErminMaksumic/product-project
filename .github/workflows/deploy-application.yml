name: Product app

on:
  push:
    branches:
      - master
      - deployment

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker-compose build app
        working-directory: ./product-backend

      - name: Run Migrations
        run: php artisan migrate --force
        env:
          DB_CONNECTION: mysql
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        working-directory: ./product-backend

#      - name: Push Docker image to registry
#        run: |
#          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#          docker-compose push app
#        working-directory: ./product-backend


#  create-deployment-artifacts:
#    name: Create deployment artifacts
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: ./product-backend
#    steps:
#      - uses: actions/checkout@v2
#      - name: Compile CSS and JS
#        run: |
#          npm install
#          npm run build
#
#      - name: Configure PHP 8.2
#        uses: shivammathur/setup-php@master
#        with:
#          php-version: 8.2
#          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml
#
#      - name: Install Composer dependencies
#        run: composer install --no-dev --no-interaction --prefer-dist
#
#      - name: Create deployment artifact
#        env:
#          GITHUB_SHA: ${{ github.sha }}
#        run: tar -czf "${GITHUB_SHA}".tar.gz  --exclude=*.git --exclude=node_modules *
#
#      - name: Store artifact for distribution
#        uses: actions/upload-artifact@v2
#        with:
#          name: app-build
#          path: ./${{ github.sha }}.tar.gz
